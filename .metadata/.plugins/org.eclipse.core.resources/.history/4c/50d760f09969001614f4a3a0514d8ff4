#include <iostream>
using namespace std;

void partition(int a[], int l, int r, int &m1, int &m2)
{
    m1 = l-1, m2 = r;
    int p = l-1, q = r;
    int v = a[r];

    while (true)
    {
        while (a[++m1] < v);

        while (v < a[--m2])
            if (m2 == l)
                break;

        if (m1 >= m2) break;
        swap(a[m1], a[m2]);

        if (a[m1] == v)
        {
            p++;
            swap(a[p], a[m1]);
        }

        if (a[m2] == v)
        {
            q--;
            swap(a[m2], a[q]);
        }
    }

    swap(a[m1], a[r]);

    m2 = m1-1;
    for (int k = l; k < p; k++, m2--)
        swap(a[k], a[m2]);

    m1 = m1+1;
    for (int k = r-1; k > q; k--, m1++)
        swap(a[m1], a[k]);
}

void quicksort(int a[], int l, int r)
{
    if (r <= l) return;

    int i, j;

    partition(a, l, r, i, j);

    quicksort(a, l, j);
    quicksort(a, i, r);
}

void printarr(int a[], int n)
{
    for (int i = 0; i < n; ++i)
        cout<<a[i];
    cout<<endl;
}

int main()
{
    int N;
    cin>>N;
    int array[N];
    for(int i=0;i<N;i++){
      cin>>array[i];
    }
    quicksort(array, 0, N - 1);
    printarr(array, N);
    return 0;
}
